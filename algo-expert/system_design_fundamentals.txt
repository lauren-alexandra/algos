Client--Server Model

The paradigm by which modern systems are designed, which consists of clients requesting
data or service from servers and servers providing data or service to clients.

Client

A machine or process that requests data or service from a server. 
Note: a single machine or piece of software can be both a client and a server at the same
time. For instance, a single machine could act as a server for end users and as a client
for a database.

Server

A machine or process that provides data or service for a client, usually by listening for
incoming network calls. 
Note: a single machine or piece of software can be both a client and a server at the same time.
For instance, a single machine could act as a server for end users and as a client
for a database.

IP Address

An address given to each machine connected to the public internet. IPv4 addresses consist 
of four numbers separated by dots: a.b.c.d where all four numbers are between 0 and 255.

Special values include:
- 127.0.0.1: your local machine / localhost
- 192.168.x.y: your private network. For instance, your machine and all machines on your
private wifi network will usually have the 192.168 prefix. 

DNS 

Domain Name System: it describes the entities and protocols involved in the translation
from domain names to IP addresses. Typically machines make a DNS query to a well known
entity which is responsible for returning the IP address (or multiple ones) of the 
requested domain name in the response. 
A DNS query is made when you enter www.google.com in a browser. 


What are load balancers? 

Client		Load Balancer		Server

Balancing: rerouting traffic from clients so it doesn't go directly to one server but
to many load balancers. 

Load Balancer: a type of reverse proxy that distributes traffic across servers. Load 
balancers can be found in many parts of a system from the DNS layer all the way to the
database layer. 

Reverse Proxy: a server that sits between clients and servers and acts on behalf of the 
servers, typically used for logging, load balancing, or caching. 

Server-selection strategy: A strategy for how a load balancer chooses servers when 
distributing traffic amongst multiple servers. e.g. random selection, performance-based
selection (choose the server with the best peformance like fastest response time or 
least amount of traffic), and IP-based routing.

Hot Spot: Some servers will receive more traffic than others, creating a "hot spot."

Nginx: "engine X" is a webserver that is often used as a reverse proxy and load balancer.
